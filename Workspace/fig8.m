function [allData, scenario, sensor] = fig8()
%generateSensorData - Returns sensor detections
%    allData = generateSensorData returns sensor detections in a structure
%    with time for an internally defined scenario and sensor suite.
%
%    [allData, scenario, sensors] = generateSensorData optionally returns
%    the drivingScenario and detection generator objects.

% Generated by MATLAB(R) 9.10 (R2021a) and Automated Driving Toolbox 3.3 (R2021a).
% Generated on: 20-Sep-2021 19:00:14

% Create the drivingScenario object and ego car
[scenario, egoVehicle] = createDrivingScenario;

% Create all the sensors
sensor = createSensor(scenario);

allData = struct('Time', {}, 'ActorPoses', {}, 'ObjectDetections', {}, 'LaneDetections', {}, 'PointClouds', {}, 'INSMeasurements', {});
running = true;
while running
    
    % Generate the target poses of all actors relative to the ego vehicle
    poses = targetPoses(egoVehicle);
    time  = scenario.SimulationTime;
    
    % Generate detections for the sensor
    laneDetections = [];
    ptClouds = [];
    insMeas = [];
    [objectDetections, numObjects, isValidTime] = sensor(poses, time);
    objectDetections = objectDetections(1:numObjects);
    
    % Aggregate all detections into a structure for later use
    if isValidTime
        allData(end + 1) = struct( ...
            'Time',       scenario.SimulationTime, ...
            'ActorPoses', actorPoses(scenario), ...
            'ObjectDetections', {objectDetections}, ...
            'LaneDetections', {laneDetections}, ...
            'PointClouds',   {ptClouds}, ... %#ok<AGROW>
            'INSMeasurements',   {insMeas}); %#ok<AGROW>
    end
    
    % Advance the scenario one time step and exit the loop if the scenario is complete
    running = advance(scenario);
end

% Restart the driving scenario to return the actors to their initial positions.
restart(scenario);

% Release the sensor object so it can be used again.
release(sensor);

%%%%%%%%%%%%%%%%%%%%
% Helper functions %
%%%%%%%%%%%%%%%%%%%%

% Units used in createSensors and createDrivingScenario
% Distance/Position - meters
% Speed             - meters/second
% Angles            - degrees
% RCS Pattern       - dBsm

function sensor = createSensor(scenario)
% createSensors Returns all sensor objects to generate detections

% Assign into each sensor the physical and radar profiles for all actors
profiles = actorProfiles(scenario);
sensor = visionDetectionGenerator('SensorIndex', 1, ...
    'SensorLocation', [3.7 0], ...
    'MaxRange', 100, ...
    'DetectorOutput', 'Objects only', ...
    'Intrinsics', cameraIntrinsics([1814.81018227767 1814.81018227767],[320 240],[480 640]), ...
    'ActorProfiles', profiles);

function [scenario, egoVehicle] = createDrivingScenario
% createDrivingScenario Returns the drivingScenario defined in the Designer

% Construct a drivingScenario object.
scenario = drivingScenario;

% Add all road segments
roadCenters = [50 20 0;
    50 -20.2 0;
    30.2 -20.2 0;
    20.3 -0.3 0;
    10.1 -19.9 0;
    -9.2 -20.2 0;
    -9.4 20.1 0;
    10.5 20.3 0;
    20.4 -0.4 0;
    30.2 20.1 0;
    50 20 0];
laneSpecification = lanespec(2);
road(scenario, roadCenters, 'Lanes', laneSpecification, 'Name', 'Road');

% Add the ego vehicle
egoVehicle = vehicle(scenario, ...
    'ClassID', 1, ...
    'Position', [-2.4 -25.9 0], ...
    'Mesh', driving.scenario.carMesh, ...
    'Name', 'Car');
waypoints = [-2.4 -25.9 0;
    8 -24.8 0;
    13.1 -18.9 0;
    15 -8.8 0;
    17.1 -3.6 0;
    22.5 -2 0;
    26.3 -7.4 0;
    27.5 -16.8 0;
    30.7 -22.4 0;
    36.6 -26.4 0;
    42.7 -26.2 0;
    48.1 -24.3 0;
    53.5 -20.6 0;
    58.9 -11.6 0;
    61.5 -2.9 0;
    60.1 7.4 0;
    56.8 14.9 0;
    53.1 19.4 0;
    47.9 23.4 0;
    40.4 26.7 0;
    36.6 26.2 0;
    31.7 23.9 0;
    27 18.2 0;
    26 9.8 0;
    23.2 3.2 0;
    19.2 1.3 0;
    15.7 5.3 0;
    14.3 14.5 0;
    12.2 20.8 0;
    8.9 24.1 0;
    2.3 26.2 0;
    -3.6 26 0;
    -8 23.4 0;
    -13.7 18.7 0;
    -19.3 10.9 0;
    -21.4 3.2 0;
    -20.2 -7.4 0;
    -17.9 -13.5 0;
    -14.1 -18.4 0;
    -10.4 -22 0;
    -6.4 -24.5 0;
    -2.6 -25.7 0];
speed = [25;25;25;25;25;25;25;25;25;25;25;25;25;25;25;25;25;25;25;25;25;25;25;25;25;25;25;25;25;25;25;25;25;25;25;25;25;25;25;25;25;25];
trajectory(egoVehicle, waypoints, speed);

